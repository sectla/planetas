
<!DOCTYPE html>
<html>
    <head>
        <title>
            three.js webgl - rotate object around point
        </title>
        <meta charset="utf-8">
            <style>
                body {
        background-color:  #b3ccff;
        
        margin: 0;
        overflow: hidden;
    }
            </style>
            <script src="three.min.js">
            </script>
            <script type="text/javascript" src="sistema.js"></script>
            <script>
                var camera, scene, renderer;
    var geometry, material, mesh, ref, pivotPoint;
    var clock;

        function init() {
            
            renderer = new THREE.WebGLRenderer();
        
            //renderer.setClearColor(0x1a53ff,1);
            
           renderer.setSize( window.innerWidth, window.innerHeight );
            
            document.body.appendChild( renderer.domElement );
           
            scene = new THREE.Scene();

            geometry = new THREE.SphereGeometry( 1.5, 20, 20 );


            material = new THREE.MeshPhongMaterial({ color: 0xffff00ffff00});
            
            ref = new THREE.Mesh( geometry, material );

            ref.position.set(0,0,0);
            scene.add( ref );

            pivotPoint = new THREE.Object3D();
            pivotPoint.position.set(0,0,0);/*posicion del circulo x y tamano*/
            scene.add( pivotPoint );
           
            esfera = new THREE.SphereGeometry( 0.6, 20, 20 );
            materiall = new THREE.MeshPhongMaterial({ color:0xff0080ff80 });
            
            azul= new THREE.Mesh( esfera, materiall );
            pivotPoint.add(azul);
            azul.position.set(-2,2,0)



             
            geome = new THREE.SphereGeometry( 0.6, 20, 20 );
            materia = new THREE.MeshPhongMaterial({ color: 0xb3b3ff});
            mesha = new THREE.Mesh( geome, materia );
            pivotPoint.add(mesha);
            mesha.position.set(0,3,0)

           
            
            geo = new THREE.SphereGeometry( 0.6, 20, 20 );
            mat = new THREE.MeshPhongMaterial({ color: 0x80ff8080ff80});
            rojo = new THREE.Mesh( geo, mat );
            pivotPoint.add(rojo);
            rojo.position.set(2,2,0)

          
              
            g = new THREE.SphereGeometry( 0.6, 20, 20 );
            m = new THREE.MeshPhongMaterial({ color: 0xe600e6e600e6});
            rosa = new THREE.Mesh( g, m );
            pivotPoint.add(rosa);
            rosa.position.set(3,-0,0)

 
              
            geometry = new THREE.SphereGeometry( 0.6, 20, 20 );
            material = new THREE.MeshPhongMaterial({ color: 0x000000000000});
            mesh = new THREE.Mesh( geometry, material );
            pivotPoint.add(mesh);
            mesh.position.set(2,-2,0)

        

             geometry = new THREE.SphereGeometry( 0.6, 20, 20 );
            material = new THREE.MeshPhongMaterial({ color: 0x00ff0000ff00});
            mesh = new THREE.Mesh( geometry, material );
            pivotPoint.add(mesh);
            mesh.position.set(0,-3,0)

              

            geometry = new THREE.SphereGeometry( 0.6, 20, 20 );
            material = new THREE.MeshPhongMaterial({ color: 0xEEff0000e6e6});
            mesh = new THREE.Mesh( geometry, material );
            pivotPoint.add(mesh);
            mesh.position.set(-2,-2,0)
 
             geometry = new THREE.SphereGeometry( 0.6, 20, 20 );
            material = new THREE.MeshPhongMaterial({ color: 0xe60000e60000});
            mesh = new THREE.Mesh( geometry, material );
            pivotPoint.add(mesh);
            mesh.position.set(-3,0,0)
           
            camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.6, 20 );
            camera.position.set (0,14,-1);
           
            camera.lookAt(pivotPoint.position);
            
            
            
            var ambient = new THREE.AmbientLight(0xADFF67,1);
           
            scene.add(ambient);
            var light = new THREE.DirectionalLight(0xff00EE, 6, 80, 8 );
            light.position.set(-10, 15 , 15); 
            light.castShadow = true;
            scene.add(light);

            clock = new THREE.Clock();
            window.addEventListener( 'resize', onWindowResize, false );

        }

        var dir=1;
        function animate() {
            requestAnimationFrame( animate );
            
            var delta =  clock.getDelta();

            pivotPoint.rotation.z += delta * 1;
            
            renderer.render( scene, camera );
        }
        
        function onWindowResize() {

                windowHalfX = window.innerWidth / 2;
                windowHalfY = window.innerHeight / 2;
                 
                camera.aspect = window.innerWidth / window.innerHeight;
                camera.updateProjectionMatrix();

                renderer.setSize( window.innerWidth, window.innerHeight );

        }
        
        window.addEventListener("DOMContentLoaded", function(event) {
            init();
            animate();
        });
            </script>
        </meta>
    </head>
    <body>
        <center>
            <header>
                <h1>
                    SISTEMA SOLAR
                    <H1>DESARROLLO DE APLICACIONES MULTIMEDIA INTERACTIVA</H1>
                
                </h1>
            </header>
        </center>

        <div id="cameracontrols" style="position:absolute; bottom:20px; right: 20px;">
        <input type="button" title="(M)" id="zoommas" value="+"></input>
        <input type="button" title="(N)" id="zoommenos"  value="-"></input>
        <input type="button" title="(FLECHA ARRIBA)" id="menosy"  value="&uarr;"></input>
        <input type="button" title="(FLECHA ABAJO)" id="masy" value="&darr;"></input>

    </div> 
    </body>
</html>
